
import os

project_path = os.path.dirname(os.path.abspath(__file__))

files_to_create = {
    "README.md": '''# –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ1: –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã (FastAPI + Docker + NGINX)

## üìå –¶–µ–ª—å

- –†–µ–∞–ª–∏–∑–∞—Ü–∏—è REST API-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ FastAPI
- –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ —Å –ø–æ–º–æ—â—å—é NGINX
- –£–ø–∞–∫–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Docker
- –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Docker Compose

---

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
microservices_lab1/
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ main.py
‚îÇ   ‚îú‚îÄ‚îÄ contact.py
‚îÇ   ‚îî‚îÄ‚îÄ group.py
‚îú‚îÄ‚îÄ docker/
‚îú‚îÄ‚îÄ nginx/
‚îú‚îÄ‚îÄ nginx_conf_runtime/
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ Makefile
‚îú‚îÄ‚îÄ start.sh
‚îî‚îÄ‚îÄ README.md
```

---

## üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞

1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∏ Docker Compose
2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç:

```bash
./start.sh
```

–∏–ª–∏

```bash
make up
```

3. –ü—Ä–æ–≤–µ—Ä–∫–∞:

- http://localhost/api/v1/contact
- http://localhost/api/v1/group

4. –û—Å—Ç–∞–Ω–æ–≤–∫–∞:

```bash
make down
```
''',

    "Makefile": '''up:
\tdocker compose up --build

down:
\tdocker compose down

logs:
\tdocker compose logs -f

ps:
\tdocker compose ps
''',

    "start.sh": '''#!/bin/bash

echo "üßº –û—Ç–∫–ª—é—á–∞–µ–º SELinux (–µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω)..."
sudo setenforce 0 2>/dev/null || true

echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞..."
docker compose down
docker compose up --build
'''
}

def create_meta_files():
    for filename, content in files_to_create.items():
        path = os.path.join(project_path, filename)
        with open(path, "w", encoding="utf-8") as f:
            f.write(content)
        if filename == "start.sh":
            os.chmod(path, 0o755)
    print("‚úÖ –§–∞–π–ª—ã README.md, Makefile –∏ start.sh —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã.")

if __name__ == "__main__":
    create_meta_files()
